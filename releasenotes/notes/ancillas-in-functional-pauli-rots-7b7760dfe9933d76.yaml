---
deprecations:
  - |
    The ``num_ancilla_qubits`` property of the ``PiecewiseLinearPauliRotations`` 
    and ``PolynomialPauliRotations`` classes has been deprecated in favor of 
    the ``num_ancillas`` attribute, which is the name of the method on the 
    ``QuantumCircuit``.
fixes:
  - |
    The ``PiecewiseLinearPauliRotations`` class always allocated work qubits 
    for the comparison operations, also if there was only one interval and 
    therefore no comparison necessary. This has been fixed.
  - |
    Upon converting a circuit to an instruction the ``AncillaQubit``s are converted
    to ``Qubit``s. Therefore appending a circuit with ancillas to another circuit 
    with matching number of ancillas leads to an inconsistent mapping of ancillas to 
    qubits, which causes an error in the DAG circuit.
    This has temporarily been fixed by allowing to map ancillas to qubits and vice
    versa and will be fixed permanently in future by giving instructions a 
    concept of ancillas.

    .. code-block::

        ar = AncillaRegister(1)
        qr = QuantumRegister(1)
        qc = QuantumCircuit(qr, ar)
        qc.cx(0, 1)
        qc.cx(0, 1)

        qc2 = QuantumCircuit(*qc.qregs)
        qc2.append(qc, [0, 1])
        decomposed = qc2.decompose()  # used to raise a DAGCircuitError
